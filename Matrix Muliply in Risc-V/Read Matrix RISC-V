.globl read_matrix

.text
# ==============================================================================
# FUNCTION: Allocates memory and reads in a binary file as a matrix of integers
#
# FILE FORMAT:
#   The first 8 bytes are two 4 byte ints representing the # of rows and columns
#   in the matrix. Every 4 bytes afterwards is an element of the matrix in
#   row-major order.
# Arguments:
#   a0 (char*) is the pointer to string representing the filename
#   a1 (int*)  is a pointer to an integer, we will set it to the number of rows
#   a2 (int*)  is a pointer to an integer, we will set it to the number of columns
# Returns:
#   a0 (int*)  is the pointer to the matrix in memory
# Exceptions:
#   - If malloc returns an error,
#     this function terminates the program with error code 26
#   - If you receive an fopen error or eof,
#     this function terminates the program with error code 27
#   - If you receive an fclose error or eof,
#     this function terminates the program with error code 28
#   - If you receive an fread error or eof,
#     this function terminates the program with error code 29
# ==============================================================================
read_matrix:

    # Prologue
    addi sp sp -28
    sw s0 0(sp)
    sw s1 4(sp)
    sw s2 8(sp)
    sw s3 12(sp)
    sw s4 16(sp)
    sw s5 20(sp)
    sw s6 24(sp)


    mv s1 a1 #saves a1
    mv s2 a2 #saves a2
    mv a1 x0 #sets it to read only

    addi sp sp -4
    sw ra 0(sp)
    jal ra, fopen #returns integer referring to a0 opened
    lw ra 0(sp) 
    addi sp sp 4

    mv a1 s1 #retrives a1
    mv a2 s2 #retrives a2
    mv s0 a0 #saves file pointer to s0
    addi t0, x0, -1 #t0 = -1
    beq a0 t0, fopen_error #if a0 is -1, then fopen failed
    
    
    
    #read number of rows 
    addi sp, sp, -12
    sw a1, 0(sp)
    sw a2, 4(sp)
    sw ra, 8(sp)

    addi a2, x0, 4
    addi s6, x0, 4
    jal ra, fread #reads 4 bytes
    bne a0 s6, fread_error #if a0 is not equal to s6, then fread failed
    
    mv a0 s0
    lw a1 0(sp) 
    lw a2 4(sp) 
    lw ra 8(sp)
    addi sp, sp, 12



    #read number of columns
    addi sp, sp, -12
    sw a1, 0(sp)
    sw a2, 4(sp)
    sw ra, 8(sp)

    addi a2, x0, 4
    addi s6, x0, 4
    mv a1 s2 #a1 = pointer to number of columns
    jal ra, fread #reads 4 bytes
    bne a0 s6, fread_error #if a0 is not equal to s6, then fread failed

    mv a0 s0
    lw a1 0(sp) 
    lw a2 4(sp)
    lw ra 8(sp)
    addi sp, sp, 12
    
    
    
    #allocate memory for matrix
    lw a1 0(a1) #a1 = number of rows
    lw a2 0(a2) #a2 = number of columns
    mul a0 a1 a2 #a0 = number of elements
    slli a0 a0 2 # int = 4 bytes
    mv s2 a0 #saves number of bytes to s2

    addi sp, sp, -4
    sw ra, 0(sp)
    jal ra, malloc 
    lw ra, 0(sp)
    addi sp, sp, 4
    beq a0, x0, malloc_error #if a0 is 0, then malloc failed
    mv s3 a0 #saves pointer to matrix to s3



    #read matrix
    mv a1 a0 #a1 = pointer to matrix
    mv a0 s0 #retrives file pointer from s0
    mv a2 s2 #a2 = number of bytes

    addi sp, sp, -4
    sw ra, 0(sp)
    jal ra, fread
    lw ra, 0(sp)
    addi sp, sp, 4
    bne a0, s2, fread_error #if a0 is not equal to a2, then fread failed



    #close file
    mv a0 s0 #retrives file pointer from s0
    addi sp, sp, -4
    sw ra, 0(sp)
    jal ra, fclose
    lw ra, 0(sp)
    addi sp, sp, 4
    bne a0, x0, fclose_error #if a0 is not equal to 0, then fclose failed



    # Epilogue
    mv a0 s3 #retrives pointer to matrix from s3
    lw s0 0(sp)
    lw s1 4(sp)
    lw s2 8(sp)
    lw s3 12(sp)
    lw s4 16(sp)
    lw s5 20(sp)
    lw s6 24(sp)
    addi sp sp 28
    jr ra

fopen_error:
    li a0 27
    j exit

malloc_error:
    li a0 26
    j exit

fread_error:
    li a0 29
    j exit

fclose_error:
    li a0 28
    j exit
